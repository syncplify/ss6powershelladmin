#
# SMServer V6
# Syncplify.me Server! REST API
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
Unique ID for this VFS, it will be auto-generated if empty

.PARAMETER Name
A human-readable name for this VFS

.PARAMETER Type
No description available.

.PARAMETER Target
Target of the VFS, depends on VFSType

.PARAMETER TargetPayload
Optional target payload required by some VFS backends

.PARAMETER Encrypt
Do we need to encrypt its contents?

.PARAMETER PassPhrase
No description available.

.PARAMETER Quota
No description available.

.OUTPUTS

VirtualFileSystem<PSCustomObject>
#>

function New-SS6VirtualFileSystem {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Type},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Target},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TargetPayload},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Encrypt},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${PassPhrase},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Quota}
    )

    Process {
        'Creating object: SS6AdminModule => SS6VirtualFileSystem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "name" = ${Name}
            "type" = ${Type}
            "target" = ${Target}
            "targetPayload" = ${TargetPayload}
            "encrypt" = ${Encrypt}
            "passPhrase" = ${PassPhrase}
            "quota" = ${Quota}
        }

        return $PSO
    }
}
