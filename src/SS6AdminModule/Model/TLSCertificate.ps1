#
# SMServer V6
# Syncplify.me Server! REST API
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
Unique ID, it will be auto-generated

.PARAMETER Cert
X.509 certificate

.PARAMETER Key
X.509 certificate's private key

.PARAMETER CaBundle
No description available.

.PARAMETER KeyPass
No description available.

.PARAMETER Hash
No description available.

.PARAMETER CommonName
No description available.

.PARAMETER ValidFrom
No description available.

.PARAMETER ValidUntil
No description available.

.OUTPUTS

TLSCertificate<PSCustomObject>
#>

function New-SS6TLSCertificate {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Cert},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Key},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CaBundle},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${KeyPass},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Hash},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CommonName},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${ValidFrom},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${ValidUntil}
    )

    Process {
        'Creating object: SS6AdminModule => SS6TLSCertificate' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "cert" = ${Cert}
            "key" = ${Key}
            "caBundle" = ${CaBundle}
            "keyPass" = ${KeyPass}
            "hash" = ${Hash}
            "commonName" = ${CommonName}
            "validFrom" = ${ValidFrom}
            "validUntil" = ${ValidUntil}
        }

        return $PSO
    }
}
