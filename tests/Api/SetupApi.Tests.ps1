#
# SMServer V6
# Syncplify Server! REST API
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'SS6AdminModule' -name 'SetupApi' {
    Context 'New-SA' {
        It 'Test New-SA' {
            #$TestResult = New-SA -XSetupOTP "TEST_VALUE" -SuperAdmin "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-SetupQRCodePng' {
        It 'Test Get-SetupQRCodePng' {
            #$TestResult = Get-SetupQRCodePng -Issuer "TEST_VALUE" -Email "TEST_VALUE" -Secret "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-SetupRandomBase32' {
        It 'Test Get-SetupRandomBase32' {
            #$TestResult = Get-SetupRandomBase32 -Length "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-SetupRandomName' {
        It 'Test Get-SetupRandomName' {
            #$TestResult = Get-SetupRandomName
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-Googleauthenticatortest' {
        It 'Test Invoke-Googleauthenticatortest' {
            #$TestResult = Invoke-Googleauthenticatortest -Secret "TEST_VALUE" -Token "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Join-HANode' {
        It 'Test Join-HANode' {
            #$TestResult = Join-HANode -XSetupOTP "TEST_VALUE" -InlineObject1 "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-Node' {
        It 'Test Set-Node' {
            #$TestResult = Set-Node -XSetupOTP "TEST_VALUE" -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-SSC' {
        It 'Test Set-SSC' {
            #$TestResult = Set-SSC -InlineObject "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
