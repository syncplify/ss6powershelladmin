#
# SMServer V6
# Syncplify Server! REST API
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'SS6AdminModule' -name 'AdminApi' {
    Context 'Invoke-AckAdminNotificationByID' {
        It 'Test Invoke-AckAdminNotificationByID' {
            #$TestResult = Invoke-AckAdminNotificationByID -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-AckAdminNotifications' {
        It 'Test Invoke-AckAdminNotifications' {
            #$TestResult = Invoke-AckAdminNotifications
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-BlockList' {
        It 'Test Add-BlockList' {
            #$TestResult = Add-BlockList -BlockListItem "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-CRTToCSR' {
        It 'Test Add-CRTToCSR' {
            #$TestResult = Add-CRTToCSR -Id "TEST_VALUE" -InlineObject7 "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-Cert' {
        It 'Test Add-Cert' {
            #$TestResult = Add-Cert -TLSCertificate "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-LDAPConfig' {
        It 'Test Add-LDAPConfig' {
            #$TestResult = Add-LDAPConfig -LDAPConfig "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-SSHHostKey' {
        It 'Test Add-SSHHostKey' {
            #$TestResult = Add-SSHHostKey -SSHHostKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-Script' {
        It 'Test Add-Script' {
            #$TestResult = Add-Script -Script "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-User' {
        It 'Test Add-User' {
            #$TestResult = Add-User -User "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-UserPublicKey' {
        It 'Test Add-UserPublicKey' {
            #$TestResult = Add-UserPublicKey -Id "TEST_VALUE" -SSHPubKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-VFS' {
        It 'Test Add-VFS' {
            #$TestResult = Add-VFS -VirtualFileSystem "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-AdminLogin' {
        It 'Test Invoke-AdminLogin' {
            #$TestResult = Invoke-AdminLogin -VsiteID "TEST_VALUE" -XOTP "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-AdminLogout' {
        It 'Test Invoke-AdminLogout' {
            #$TestResult = Invoke-AdminLogout
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Clear-BlockList' {
        It 'Test Clear-BlockList' {
            #$TestResult = Clear-BlockList
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Close-SessionById' {
        It 'Test Close-SessionById' {
            #$TestResult = Close-SessionById -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Close-Sessions' {
        It 'Test Close-Sessions' {
            #$TestResult = Close-Sessions
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-CSR' {
        It 'Test New-CSR' {
            #$TestResult = New-CSR -CSR "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteBlockListConfig' {
        It 'Test Invoke-DeleteBlockListConfig' {
            #$TestResult = Invoke-DeleteBlockListConfig -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteCSR' {
        It 'Test Invoke-DeleteCSR' {
            #$TestResult = Invoke-DeleteCSR -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteFTPCertByID' {
        It 'Test Invoke-DeleteFTPCertByID' {
            #$TestResult = Invoke-DeleteFTPCertByID -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteLDAPConfig' {
        It 'Test Invoke-DeleteLDAPConfig' {
            #$TestResult = Invoke-DeleteLDAPConfig -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeletePublicKey' {
        It 'Test Invoke-DeletePublicKey' {
            #$TestResult = Invoke-DeletePublicKey -Id "TEST_VALUE" -KeyID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteSSHHostKeyByID' {
        It 'Test Invoke-DeleteSSHHostKeyByID' {
            #$TestResult = Invoke-DeleteSSHHostKeyByID -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteScript' {
        It 'Test Invoke-DeleteScript' {
            #$TestResult = Invoke-DeleteScript -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteUser' {
        It 'Test Invoke-DeleteUser' {
            #$TestResult = Invoke-DeleteUser -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteVFS' {
        It 'Test Invoke-DeleteVFS' {
            #$TestResult = Invoke-DeleteVFS -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Cert' {
        It 'Test New-Cert' {
            #$TestResult = New-Cert -CertificateRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-SSHHostKey' {
        It 'Test New-SSHHostKey' {
            #$TestResult = New-SSHHostKey -HostKeyRequestFields "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-UserPublicKeys' {
        It 'Test New-UserPublicKeys' {
            #$TestResult = New-UserPublicKeys -Id "TEST_VALUE" -HostKeyRequestFields "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ActiveSessions' {
        It 'Test Get-ActiveSessions' {
            #$TestResult = Get-ActiveSessions
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AdminNotification' {
        It 'Test Get-AdminNotification' {
            #$TestResult = Get-AdminNotification -From "TEST_VALUE" -To "TEST_VALUE" -Limit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AdminNotificationByID' {
        It 'Test Get-AdminNotificationByID' {
            #$TestResult = Get-AdminNotificationByID -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AdminProfile' {
        It 'Test Get-AdminProfile' {
            #$TestResult = Get-AdminProfile
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-BlockListConfig' {
        It 'Test Get-BlockListConfig' {
            #$TestResult = Get-BlockListConfig -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-BlockLists' {
        It 'Test Get-BlockLists' {
            #$TestResult = Get-BlockLists -Offset "TEST_VALUE" -Limit "TEST_VALUE" -Order "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-CSR' {
        It 'Test Get-CSR' {
            #$TestResult = Get-CSR -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-CSRs' {
        It 'Test Get-CSRs' {
            #$TestResult = Get-CSRs
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-CertByID' {
        It 'Test Get-CertByID' {
            #$TestResult = Get-CertByID -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Certs' {
        It 'Test Get-Certs' {
            #$TestResult = Get-Certs
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-GlobalStats' {
        It 'Test Get-GlobalStats' {
            #$TestResult = Get-GlobalStats
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-LDAPConfig' {
        It 'Test Get-LDAPConfig' {
            #$TestResult = Get-LDAPConfig -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-LDAPConfigs' {
        It 'Test Get-LDAPConfigs' {
            #$TestResult = Get-LDAPConfigs -Offset "TEST_VALUE" -Limit "TEST_VALUE" -Order "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-SSHHostKeyByID' {
        It 'Test Get-SSHHostKeyByID' {
            #$TestResult = Get-SSHHostKeyByID -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-SSHHostKeys' {
        It 'Test Get-SSHHostKeys' {
            #$TestResult = Get-SSHHostKeys
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Scrips' {
        It 'Test Get-Scrips' {
            #$TestResult = Get-Scrips -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Scripts' {
        It 'Test Get-Scripts' {
            #$TestResult = Get-Scripts -Offset "TEST_VALUE" -Limit "TEST_VALUE" -Order "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-StatsSinceLastStart' {
        It 'Test Get-StatsSinceLastStart' {
            #$TestResult = Get-StatsSinceLastStart
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-SystemProperties' {
        It 'Test Get-SystemProperties' {
            #$TestResult = Get-SystemProperties
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-User' {
        It 'Test Get-User' {
            #$TestResult = Get-User -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-UserPublicKeyByID' {
        It 'Test Get-UserPublicKeyByID' {
            #$TestResult = Get-UserPublicKeyByID -Id "TEST_VALUE" -KeyID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-UserPublicKeys' {
        It 'Test Get-UserPublicKeys' {
            #$TestResult = Get-UserPublicKeys -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Users' {
        It 'Test Get-Users' {
            #$TestResult = Get-Users -Offset "TEST_VALUE" -Limit "TEST_VALUE" -Order "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-VFS' {
        It 'Test Get-VFS' {
            #$TestResult = Get-VFS -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-VFSs' {
        It 'Test Get-VFSs' {
            #$TestResult = Get-VFSs -Offset "TEST_VALUE" -Limit "TEST_VALUE" -Order "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-VsiteConfig' {
        It 'Test Get-VsiteConfig' {
            #$TestResult = Get-VsiteConfig
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ParchVsiteConfig' {
        It 'Test Invoke-ParchVsiteConfig' {
            #$TestResult = Invoke-ParchVsiteConfig -SrvConfig "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PatchLDAPConfig' {
        It 'Test Invoke-PatchLDAPConfig' {
            #$TestResult = Invoke-PatchLDAPConfig -Id "TEST_VALUE" -LDAPConfig "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PatchScript' {
        It 'Test Invoke-PatchScript' {
            #$TestResult = Invoke-PatchScript -Id "TEST_VALUE" -Script "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PatchUser' {
        It 'Test Invoke-PatchUser' {
            #$TestResult = Invoke-PatchUser -Id "TEST_VALUE" -User "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PatchVFS' {
        It 'Test Invoke-PatchVFS' {
            #$TestResult = Invoke-PatchVFS -Id "TEST_VALUE" -VirtualFileSystem "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-AdminPassword' {
        It 'Test Update-AdminPassword' {
            #$TestResult = Update-AdminPassword -PasswordType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-LDAPConfig' {
        It 'Test Update-LDAPConfig' {
            #$TestResult = Update-LDAPConfig -Id "TEST_VALUE" -LDAPConfig "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-Script' {
        It 'Test Update-Script' {
            #$TestResult = Update-Script -Id "TEST_VALUE" -Script "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-User' {
        It 'Test Update-User' {
            #$TestResult = Update-User -Id "TEST_VALUE" -User "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-VFS' {
        It 'Test Update-VFS' {
            #$TestResult = Update-VFS -Id "TEST_VALUE" -VirtualFileSystem "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-VsiteConfig' {
        It 'Test Update-VsiteConfig' {
            #$TestResult = Update-VsiteConfig -SrvConfig "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-VsiteConfigMode' {
        It 'Test Update-VsiteConfigMode' {
            #$TestResult = Update-VsiteConfigMode -Mode "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
